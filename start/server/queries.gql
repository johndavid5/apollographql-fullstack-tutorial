https://www.apollographql.com/docs/tutorial/resolvers/
*Write your graph's resolvers.*

=> operation keyword: 'query' or 'mutation'
(give queries descriptive names so they're discoverable in Apollo developer tooling)
<operation_keyword> <name> {
  <body_of_query>
}

<operation_keyword> <name=GetLaunches> {
  <query_type='launches' field> {
    <selection_set>
  }
}

query GetLaunches {
    launches {
        id
        mission {
            name
        }
    }
}

query GetLaunches {
    launches {
        id
        site
        mission {
            name
        }
    }
}

query GetLaunchById {
  launch(id: 60) {
    id
    rocket {
      id
      type
    }
  }
}

...or...using query variables...

query GetLaunchById($id: ID!) {
  launch(id: $id) {
    id
    rocket {
      id
      type
    }
  }
}

QUERY_VARIABLES: { "id": 60 }

NOTE: With { "id": 60 } in QUERY_VARIABLES (not HTTP HEADERS!)

http://localhost:4000/ POST
query-01.json:
{
 operationName: "GetLaunchById",
 variables: { "id": 60 },
 query: "query GetLaunchById($id: ID!) {\n  launch(id: $id) {\n    id\n    rocket {\n      id\n      type\n    }\n  }\n}\n"
}

https://stackoverflow.com/questions/18611903/how-to-pass-payload-via-json-file-for-curl

$ curl -v -X POST http://server/api/v1/places.json --header "Content-Type: application/json" -d "operationName: 'GetLaunchById',
 variables: { 'id': 60 }, \
 query: 'query GetLaunchById($id: ID!) {\n  launch(id: $id) {\n    id\n    rocket {\n      id\n      type\n    }\n  }\n}\n"

$ curl -v -X POST http://localhost:4000 --header "Content-Type: application/json" -d @query-01.json 

Or use Postman...

query-03.js...
--------------
query GetLaunches {
  launches(pageSize: 3) {
    launches {
      id
      mission {
        name
      }
    },
    cursor,
    hasMore
  }
}

query-04.js...
--------------
query GetLaunches {
  launches(pageSize: 3, after: "1575566963") {
    launches {
      id
      mission {
        name
      }
    },
    cursor,
    hasMore
  }
}

- - - -

query GetLaunches {
  launches(pageSize: 1) {
    launches {
      id
      mission {
        name,
        missionPatch
      }
    },
    cursor,
    hasMore
  }
}

query GetLaunches {
  launches(pageSize: 1) G
mutation LoginUser {
  login(email: "daisy@apollographql.com")
}

RESPONSE:
{
  "data": {
    "login": "ZGFpc3lAYXBvbGxvZ3JhcGhxbC5jb20="
  }
}

- - - - 

mutation BookTrips {
  bookTrips(launchIds: [67, 68, 69]) {
    success
    message
    launches {
      id
    }
  }
}

with HTTP HEADERS:
{
  "authorization": "ZGFpc3lAYXBvbGxvZ3JhcGhxbC5jb20="
}

- - - - 

mutation CancelTrip {
  cancelTrip(launchId: 69) {
    success
    message
    launches {
      id
    }
  }
}

with HTTP HEADERS:
{
  "authorization": "ZGFpc3lAYXBvbGxvZ3JhcGhxbC5jb20="
}

- - - - 

mutation BookTrips {
  bookTrips(launchIds: [69]) {
    success
    message
    launches {
      id
    }
  }
}

with HTTP HEADERS:
{
  "authorization": "ZGFpc3lAYXBvbGxvZ3JhcGhxbC5jb20="
}

- - - -

mutation LindaTripp {
  lindaTripp(dressId: 69) {
    success
    message
    launches {
      id
    }
  }
}

*without* HTTP HEADERS:
{
  "authorization": "ZGFpc3lAYXBvbGxvZ3JhcGhxbC5jb20="
}

RESPONSE:
{
  "data": {
    "lindaTripp": {
      "success": true,
      "message": "dry-cleaning of dress with ID 69 cancelled",
      "launches": null
    }
  }
}
